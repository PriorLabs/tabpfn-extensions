name: In pull request
on:
  pull_request:
    branches:
      - main
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  check_python_linting:
    name: Ruff Linting & Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: astral-sh/ruff-action@57714a7c8a2e59f32539362ba31877a1957dded1 # v3.5.1
        with:
          src: "./src ./tests"
          version: 0.8.6
      - uses: astral-sh/ruff-action@57714a7c8a2e59f32539362ba31877a1957dded1 # v3.5.1
        with:
          src: "./src ./tests"
          version: 0.8.6
          args: "format --check"

  test_compatibility:
    name: Test Package Compatibility
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.9"
            dependency-set: minimum
          - os: macos-13 # macos-latest doesn't work with python 3.10
            # https://github.com/actions/setup-python/issues/855
            python-version: "3.9"
            dependency-set: minimum
          - os: windows-latest
            python-version: "3.9"
            dependency-set: minimum
          - os: ubuntu-latest
            python-version: "3.13"
            dependency-set: maximum
          - os: macos-latest
            python-version: "3.13"
            dependency-set: maximum
          - os: windows-latest
            python-version: "3.13"
            dependency-set: maximum
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
        with:
          enable-cache: true

      - name: Generate requirements file
        run: python scripts/generate_dependencies.py ${{ matrix.dependency-set }}

      - name: Install dependencies
        run: |
          uv pip install --system ".[all]"
          # onnx is required for onnx export tests
          # we don't install all dev dependencies here for speed
          uv pip install --system -r requirements.txt
          uv pip install --system pytest psutil
          # onnx is not supported on python 3.13 yet https://github.com/onnx/onnx/issues/6339
          if [[ "${{ matrix.python-version }}" != "3.13" ]]; then
            uv pip install --system onnx
          fi
        shell: bash

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Run Tests (Unix)
        if: runner.os != 'Windows'
        env:
          TABPFN_EXCLUDE_DEVICES: "mps"
        run: |
          FAST_TEST_MODE=1 pytest tests/

      - name: Run Tests (Windows)
        if: runner.os == 'Windows'
        run: |
          $env:FAST_TEST_MODE = 1
          pytest tests/
